SELECT 
name, SUM(sixes) AS TotalSixes, SUM(four) AS TotalFour
FROM mysql_learning.player_match_details
GROUP BY name
ORDER BY TotalSixes DESC , TotalFour DESC;

SELECT 
year,COUNT(*) AS TotalMatches
FROM mysql_learning.player_match_details
GROUP BY name,year
ORDER BY TotalMatches DESC
Limit 10;

SELECT
AVG(score) AS AverageScore
FROM mysql_learning.player_match_details
WHERE year BETWEEN 2010 AND 2014
GROUP BY name
ORDER BY AverageScore ASC
Limit 0;

HAVINGCLAUSE : IT Used TO FILTER THE GROUP
WHERE : IT Used TO FILTER THE ROWS
 
 FRIST we have to use WHERE
 second we have to use group
 thrid we have to use having

 SELECT 
 name,COUNT(*) AS TotalHalfCenturies
FROM mysql_learning.player_match_details
WHERE score>=50
GROUP BY name
HAVING TotalHalfCenturies;
frist step is WHERE
2 step is group
3 step is aggregate functions
4 step is having

SELECT
AVG(score) AS AverageScore
sum(score) AS TotalScore
FROM mysql_learning.player_match_details
WHERE year BETWEEN 2010 AND 2014
GROUP BY name
HAVING AverageScore < 75
ORDER BY AverageScore ASC;


GROUP BY:
GROUP BY statement groups rows that have the same values in one or more columns.
It is commonly used to create summaries, such as total sales by region or number of users by age group.

Its main features include:
1.Used with the SELECT statement.
2.Groups rows after filtering with WHERE.
3.Can be combined with aggregate functions like SUM(), COUNT(), AVG(), etc.
4.Filter grouped results using the HAVING clause.
5.Comes after WHERE but before HAVING and ORDER BY.

Syntax:
SELECT column1, aggregate_function(column2)
FROM table_name
WHERE condition
GROUP BY column1, column2;